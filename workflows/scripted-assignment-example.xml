<?xml version="1.0"?>

<workflow-definition
	xmlns="urn:liferay.com:liferay-workflow_7.3.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="urn:liferay.com:liferay-workflow_7.3.0 http://www.liferay.com/dtd/liferay-workflow-definition_7_3_0.xsd"
>
	<name>Single Approver</name>
	<description>A single approver can approve a workflow content.</description>
	<version>1</version>
	<state>
		<name>created</name>
		<metadata>
			<![CDATA[
				{
					"xy": [
						36,
						51
					]
				}
			]]>
		</metadata>
		<initial>true</initial>
		<transitions>
			<transition>
				<name>review</name>
				<target>review</target>
				<default>true</default>
			</transition>
		</transitions>
	</state>
	<state>
		<name>approved</name>
		<metadata>
			<![CDATA[
				{
					"terminal": true,
					"xy": [
						292,
						43
					]
				}
			]]>
		</metadata>
		<actions>
			<action>
				<name>approve</name>
				<script>
					<![CDATA[
						import com.liferay.portal.kernel.workflow.WorkflowStatusManagerUtil;
						import com.liferay.portal.kernel.workflow.WorkflowConstants;

						WorkflowStatusManagerUtil.updateStatus(WorkflowConstants.getLabelStatus("approved"), workflowContext);
					]]>
				</script>
				<script-language>groovy</script-language>
				<execution-type>onEntry</execution-type>
			</action>
		</actions>
	</state>
	<task>
		<name>update</name>
		<metadata>
			<![CDATA[
				{
					"transitions": {
						"resubmit": {
							"bendpoints": [
								[
									303,
									140
								]
							]
						}
					},
					"xy": [
						555,
						329
					]
				}
			]]>
		</metadata>
		<actions>
			<action>
				<name>reject</name>
				<script>
					<![CDATA[
						import com.liferay.portal.kernel.workflow.WorkflowStatusManagerUtil;
						import com.liferay.portal.kernel.workflow.WorkflowConstants;

						WorkflowStatusManagerUtil.updateStatus(WorkflowConstants.getLabelStatus("denied"), workflowContext);
						WorkflowStatusManagerUtil.updateStatus(WorkflowConstants.getLabelStatus("pending"), workflowContext);
					]]>
				</script>
				<script-language>groovy</script-language>
				<execution-type>onAssignment</execution-type>
			</action>
			<notification>
				<name>Creator Modification Notification</name>
				<template>
					<![CDATA[Your submission was rejected by ${userName}, please modify and resubmit.]]>
				</template>
				<template-language>freemarker</template-language>
				<notification-type>email</notification-type>
				<notification-type>user-notification</notification-type>
				<recipients receptionType="to">
					<user />
				</recipients>
				<execution-type>onAssignment</execution-type>
			</notification>
		</actions>
		<assignments>
			<user />
		</assignments>
		<transitions>
			<transition>
				<name>resubmit</name>
				<target>review</target>
				<default>true</default>
			</transition>
		</transitions>
	</task>
	<task>
		<name>review</name>
		<metadata>
			<![CDATA[
				{
					"xy": [
						123,
						211
					]
				}
			]]>
		</metadata>
		<actions>
			<notification>
				<name>Review Notification</name>
				<description>
					<![CDATA[]]>
				</description>
				<template>
					<![CDATA[${userName} sent you a policy form for review.]]>
				</template>
				<template-language>freemarker</template-language>
				<notification-type>user-notification</notification-type>
				<recipients receptionType="to">
					<scripted-recipient>
						<script>
							<![CDATA[
							    import com.liferay.portal.kernel.util.GetterUtil;
        						import com.liferay.portal.kernel.workflow.WorkflowConstants;
                                import com.liferay.portal.kernel.workflow.WorkflowHandler;
                                import com.liferay.portal.kernel.workflow.WorkflowHandlerRegistryUtil;
        						import com.liferay.portal.kernel.service.ServiceContext;
        						import com.liferay.dynamic.data.mapping.storage.DDMFormFieldValue;
                                import com.liferay.asset.kernel.model.AssetRendererFactory;
                                import com.liferay.asset.kernel.model.AssetRenderer;
                                import com.liferay.portal.kernel.model.User;
                                import com.liferay.portal.kernel.service.UserLocalServiceUtil;
        						
        						import java.util.List;
        						import java.util.Locale;
        					
                                long companyId = GetterUtil.getLong((String) workflowContext.get(WorkflowConstants.CONTEXT_COMPANY_ID));

                                ServiceContext serviceContext = (ServiceContext) workflowContext.get(WorkflowConstants.CONTEXT_SERVICE_CONTEXT);
                				long classPK = GetterUtil.getLong((String)workflowContext.get(WorkflowConstants.CONTEXT_ENTRY_CLASS_PK));

                                String className = (String)workflowContext.get(WorkflowConstants.CONTEXT_ENTRY_CLASS_NAME);
                                WorkflowHandler workflowHandler = WorkflowHandlerRegistryUtil.getWorkflowHandler(className);
                                AssetRendererFactory assetRendererFactory = workflowHandler.getAssetRendererFactory();
                                AssetRenderer assetRenderer = workflowHandler.getAssetRenderer(classPK);
        						Locale locale = serviceContext.getLocale();
        						
        						List<DDMFormFieldValue> values;
                                values = assetRenderer.getAssetObject().getDDMFormValues().getDDMFormFieldValues();
        						
        						String email = "";
        						
        						for(DDMFormFieldValue value : values){
        						    if (value.getDDMFormField().getLabel() != null && value.getValue() != null) {
            							if (value.getDDMFormField().getLabel().getString(locale).equals("Email")) {
                                            email = value.getValue().getString(locale);
                                            System.out.println("Email: " + email);
                                        }
                                    }
        						}
        						
        						roles = null;
        						user = UserLocalServiceUtil.getUserByEmailAddress(companyId, email);
							]]>
						</script>
						<script-language>groovy</script-language>
					</scripted-recipient>
				</recipients>
				<execution-type>onAssignment</execution-type>
			</notification>
			<notification>
				<name>Review Completion Notification</name>
				<description>
					<![CDATA[]]>
				</description>
				<template>
					<![CDATA[Your submission was reviewed<#if taskComments?has_content> and the reviewer applied the following ${taskComments}</#if>.]]>
				</template>
				<template-language>freemarker</template-language>
				<notification-type>email</notification-type>
				<recipients receptionType="to">
					<user />
				</recipients>
				<execution-type>onExit</execution-type>
			</notification>
		</actions>
		<assignments>
			<scripted-assignment>
				<script>
					<![CDATA[
					    import com.liferay.portal.kernel.util.GetterUtil;
						import com.liferay.portal.kernel.workflow.WorkflowConstants;
                        import com.liferay.portal.kernel.workflow.WorkflowHandler;
                        import com.liferay.portal.kernel.workflow.WorkflowHandlerRegistryUtil;
						import com.liferay.portal.kernel.service.ServiceContext;
						import com.liferay.dynamic.data.mapping.storage.DDMFormFieldValue;
                        import com.liferay.asset.kernel.model.AssetRendererFactory;
                        import com.liferay.asset.kernel.model.AssetRenderer;
                        import com.liferay.portal.kernel.model.User;
                        import com.liferay.portal.kernel.service.UserLocalServiceUtil;
						
						import java.util.List;
						import java.util.Locale;
					
                        long companyId = GetterUtil.getLong((String) workflowContext.get(WorkflowConstants.CONTEXT_COMPANY_ID));

                        ServiceContext serviceContext = (ServiceContext) workflowContext.get(WorkflowConstants.CONTEXT_SERVICE_CONTEXT);
        				long classPK = GetterUtil.getLong((String)workflowContext.get(WorkflowConstants.CONTEXT_ENTRY_CLASS_PK));

                        String className = (String)workflowContext.get(WorkflowConstants.CONTEXT_ENTRY_CLASS_NAME);
                        WorkflowHandler workflowHandler = WorkflowHandlerRegistryUtil.getWorkflowHandler(className);
                        AssetRendererFactory assetRendererFactory = workflowHandler.getAssetRendererFactory();
                        AssetRenderer assetRenderer = workflowHandler.getAssetRenderer(classPK);
						Locale locale = serviceContext.getLocale();
						
						List<DDMFormFieldValue> values;
                        values = assetRenderer.getAssetObject().getDDMFormValues().getDDMFormFieldValues();
						
						String email = "";
						
						for(DDMFormFieldValue value : values){
						    if (value.getDDMFormField().getLabel() != null && value.getValue() != null) {
    							if (value.getDDMFormField().getLabel().getString(locale).equals("Email")) {
                                    email = value.getValue().getString(locale);
                                }
                            }
						}
						
						roles = null;
						user = UserLocalServiceUtil.getUserByEmailAddress(companyId, email);
]]>
				</script>
				<script-language>groovy</script-language>
			</scripted-assignment>
		</assignments>
		<transitions>
			<transition>
				<name>approve</name>
				<target>approved</target>
				<default>true</default>
			</transition>
			<transition>
				<name>reject</name>
				<target>update</target>
				<default>false</default>
			</transition>
		</transitions>
	</task>
</workflow-definition> 
